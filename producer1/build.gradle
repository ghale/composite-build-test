apply plugin: "base"

group = "my.group"
version = "1.2"

def headersDir = file("build/headers")
def sharedLibFile = { arch -> file("build/${project.name}_${arch}.so") }
def architectures = [ "32", "64" ]

// Generated headers
task headers {
    outputs.dir headersDir
    doLast {
        new File(headersDir, "${project.name}.h") << "#define SOMETHING 1"
    }
}

architectures.each { arch ->
    task "link${arch}" {
        outputs.file sharedLibFile(arch)
        doLast {
            // Do some "work"
            Thread.sleep(2000)
            sharedLibFile(arch) << "some binary"
        }
    }

    task "archive${arch}"(type: Zip) {
        from(headersDir) {
            into "headers"
        }
        dependsOn(headers)
        from(sharedLibFile(arch)) {
            into "lib"
        }
        dependsOn("link${arch}")
        archiveName = "${project.name}_${arch}.zip"
    }
}

artifacts {
    "default" file: archive32.archivePath, builtBy: archive32, classifier: "macos-x86_32"
    "default" file: archive64.archivePath, builtBy: archive64, classifier: 'macos-x86_64'
}
